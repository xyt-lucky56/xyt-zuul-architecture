server.port=2001

zuul.sensitive-headers= Access-Control-Allow-Origin
#zuul.ignored-headers=Access-Control-Allow-Credentials, Access-Control-Allow-Origin
#global
zuul.sensitiveHeaders=Cookie,Set-Cookie

#zuul.sensitive-headers=
#zuul.ignored-headers='*'
#zuul.add-host-header= true
#zuul.add-proxy-headers=true

## mybatis配置
mybatis.mapper-locations=classpath:com/xyt/zuul/mapper/*.xml
mybatis.configuration.log-impl= org.apache.ibatis.logging.stdout.StdOutImpl
mybatis.configuration.call-setters-on-nulls=true

# 打印sql
#logging.level.sql=true  //2.0以上版本用法
logging.level.com.lh.dao=debug

spring.http.multipart.max-file-size=10MB
spring.http.multipart.max-request-size=20MB
spring.http.multipart.file-size-threshold=1MB
#zuul超时设置
zuul.host.connect-timeout-millis=30000
zuul.host.socket-timeout-millis=30000
zuul.SendErrorFilter.post.disable=true
zuul.retryable=false
zuul.add-host-header=true
#ribbon请求连接的超时时间- 限制3秒内必须请求到服务，并不限制服务处理的返回时间
ribbon.ConnectTimeout=60000
#请求处理的超时时间 下级服务响应最大时间,超出时间消费方（路由也是消费方）返回timeout
ribbon.ReadTimeout=60000
#对所有操作请求都进行重试
#ribbon.OkToRetryOnAllOperations=false
#对当前实例的重试次数
#ribbon.MaxAutoRetries=1
#切换实例的重试次数
#ribbon.MaxAutoRetriesNextServer=1
#对所有操作请求都进行重试
#断路器的超时时间,下级服务返回超出熔断器时间，即便成功，消费端消息也是TIMEOUT,所以一般断路器的超时时间需要大于ribbon的超时时间。
#服务的返回时间大于ribbon的超时时间，会触发重试
##默认=1000，太小
#hystrix.command.default.execution.timeout.enabled = true
#hystrix.command.dictionary-aggregate.execution.timeout.enabled = false
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=900000000
#hystrix.command.DICTIONARY-AGGREGATE.execution.isolation.thread.timeoutInMilliseconds=900000000
#hystrix.command.dictionary-aggregate.execution.isolation.thread.timeoutInMilliseconds=9018
#hystrix.command.dictionary-aggregate.execution.isolation.thread.interruptOnTimeout=false


#熔断器启用
#feign.hystrix.enabled=true
#hystrix.command.default.execution.timeout.enabled=true
#feign.httpclient.connection-timeout=2000
#feign.httpclient.connection-timer-repeat=5000

#断路器详细设置
#当在配置时间窗口内达到此数量的失败后，进行短路。默认20个）
#hystrix.command.default.circuitBreaker.requestVolumeThreshold=20
#短路多久以后开始尝试是否恢复，默认5s）
#hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5
#出错百分比阈值，当达到此阈值后，开始短路。默认50%）
#hystrix.command.default.circuitBreaker.errorThresholdPercentage=50%
# 单独设置某个服务的超时时间，会覆盖其他的超时时间限制，服务的名称已注册中心页面显示的名称为准，超时时间不可大于断路器的超时时间
#service-a.ribbon.ReadTimeout=60000
#service-a.ribbon.ConnectTimeout=60000

#重试机制
#该参数用来开启重试机制，默认是关闭
#spring.cloud.loadbalancer.retry.enabled=false

zuul.routes.api-f.path=/api-a-bkf-/authority/**
zuul.routes.api-f.service-id=authority-mucon
zuul.routes.api-z.path=/api-a-ckf-/authority/**
zuul.routes.api-z.service-id=authority-mucon
